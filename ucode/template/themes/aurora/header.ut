{#
 luci-theme-aurora:
 Copyright 2025 eamonxg <eamonxiong@gmail.com>
 This theme is derived from luci-theme-bootstrap UT template.
 luci-theme-bootstrap:
 Copyright 2008 Steven Barth <steven@midlink.org>
 Copyright 2012 David Menting <david@nut-bolt.nl>
 Copyright 2008-2022 Jo-Philipp Wich <jo@mein.io>
 Licensed to the public under the Apache License 2.0.
-#}

{%
	import { getuid, getspnam } from 'luci.core';

	const boardinfo = ubus.call('system', 'board');

	http.prepare_content('text/html; charset=UTF-8');
-%}

<!DOCTYPE html>
<html lang="{{ dispatcher.lang }}">
	<head>
		<meta charset="utf-8">
		<title>{{ striptags(`${boardinfo.hostname ?? '?'}${node ? ` - ${node.title}` : ''}`) }} - LuCI</title>
		<script>
			const toggleTheme = () => {
				const stored = localStorage.getItem('aurora.theme');
				const isDarkMode = stored ? stored === 'dark' : window.matchMedia('(prefers-color-scheme: dark)').matches;
				document.querySelector(':root').setAttribute('data-darkmode', isDarkMode);
			};
			toggleTheme();
			window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', toggleTheme);
			window.addEventListener('storage', e => e.key === 'aurora.theme' && toggleTheme());
		</script>
		<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
		<meta name="theme-color" content="#f8fafc" media="(prefers-color-scheme: light)">
		<meta name="theme-color" content="#0f172a" media="(prefers-color-scheme: dark)">
		<meta name="color-scheme" content="light dark">
		<link rel="stylesheet" href="{{ media }}/main.css">
		<link rel="icon" href="{{ media }}/images/logo_48.png" sizes="48x48">
		<link rel="icon" href="{{ media }}/images/logo.svg" sizes="any">
		{% if (node?.css): %}
		<link rel="stylesheet" href="{{ resource }}/{{ node.css }}">
		{% endif %}
		{% if (css): %}
		<style title="text/css">{{ css }}</style>
		{% endif %}
		<script src="{{ dispatcher.build_url('admin/translations', dispatcher.lang) }}"></script>
		<script src="{{ resource }}/cbi.js"></script>
	</head>

	<body class="lang_{{ dispatcher.lang }} {{ entityencode(striptags(node?.title ?? ''), true) }}" data-page="{{ entityencode(join('-', ctx.request_path), true) }}">
		{% if (!blank_page): %}
		<header>
			<a class="brand" href="/">{{ striptags(boardinfo.hostname ?? '?') }}</a>
			<ul class="nav" id="topmenu" style="display:none"></ul>
			<div class="mobile-controls">
				<div class="mobile-menu-toggle" id="mobile-menu-btn" title="{{ _('Menu') }}">
					<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg">
						<path d="M195.584 245.76h571.392A31.66208 31.66208 0 0 1 798.72 277.36064v15.79008a31.66208 31.66208 0 0 1-31.744 31.60064H195.584A31.66208 31.66208 0 0 1 163.84 293.15072v-15.79008A31.66208 31.66208 0 0 1 195.584 245.76z m158.72 236.97408H766.976a31.66208 31.66208 0 0 1 31.744 31.60064v15.79008a31.66208 31.66208 0 0 1-31.744 31.60064H354.304A31.66208 31.66208 0 0 1 322.56 530.14528v-15.81056a31.66208 31.66208 0 0 1 31.744-31.60064z m-158.72 236.97408h571.392A31.68256 31.68256 0 0 1 798.72 751.32928v15.81056A31.66208 31.66208 0 0 1 766.976 798.72H195.584A31.66208 31.66208 0 0 1 163.84 767.11936v-15.79008a31.66208 31.66208 0 0 1 31.744-31.60064z" fill="currentColor"/>
					</svg>
				</div>
			</div>
			<div id="indicators" class="pull-right"></div>
		</header>

		<!-- Mobile menu overlay -->
		<div class="mobile-menu-overlay" id="mobile-menu-overlay">
			<nav class="mobile-nav">
				<div class="mobile-nav-header">
					<div class="mobile-nav-close" id="mobile-nav-close" title="{{ _('Close Menu') }}">
						<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg">
							<rect x="194.3" y="724.1" width="641.5" height="71.2" rx="31.6" ry="31.6" fill="currentColor"/>
							<rect x="194.3" y="506.2" width="327.4" height="71.8" rx="31.6" ry="31.6" fill="currentColor"/>
							<rect x="194.3" y="290.5" width="327.4" height="71.9" rx="31.6" ry="31.6" fill="currentColor"/>
							<path d="M614.1 574.9l137.8-140.6-137.8-140.7 41.9-42.8 179.8 183.5L656 617.7l-41.9-42.8z" fill="currentColor"/>
						</svg>
					</div>
				</div>
				<ul class="mobile-nav-list" id="mobile-nav-list">
					<!-- Mobile menu items will be rendered here -->
				</ul>
			</nav>
		</div>

		<div id="maincontent">
			{% if (getuid() == 0 && getspnam('root')?.pwdp === ''): %}
				<div class="alert-message warning">
					<h4>{{ _('No password set!') }}</h4>
					<p>{{ _('There is no password set on this router. Please configure a root password to protect the web interface.') }}</p>
					{% if (dispatcher.lookup("admin/system/admin")): %}
					  <div class="right"><a class="btn" href="{{ dispatcher.build_url("admin/system/admin") }}">{{ _('Go to password configuration...') }}</a></div>
					{% endif %}
				</div>
			{% endif %}

			{% if (boardinfo.rootfs_type == "initramfs"): %}
				<div class="alert-message warning">
					<h4>{{ _('System running in recovery (initramfs) mode.') }}</h4>
					<p>{{ _('No changes to settings will be stored and are lost after rebooting. This mode should only be used to install a firmware upgrade') }}</p>
					{% if (dispatcher.lookup("admin/system/flash")): %}
					  <div class="right"><a class="btn" href="{{ dispatcher.build_url("admin/system/flash") }}">{{ _('Go to firmware upgrade...') }}</a></div>
					{% endif %}
				</div>
			{% endif %}

			<noscript>
				<div class="alert-message warning">
					<h4>{{ _('JavaScript required!') }}</h4>
					<p>{{ _('You must enable JavaScript in your browser or LuCI will not work properly.') }}</p>
				</div>
			</noscript>

			<div id="tabmenu" style="display:none"></div>
		{% endif %}
